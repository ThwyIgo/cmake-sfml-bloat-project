name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        platform:
        - { name: Windows,     os: windows-latest, preset: x64-release-windows -UCMAKE_CXX_COMPILER -UCMAKE_C_COMPILER, cc: , cxx: }
        - { name: Linux GCC,   os: ubuntu-latest,  preset: x64-release-linux,   cc: gcc,    cxx: g++ }
        - { name: Linux Clang, os: ubuntu-latest,  preset: x64-release-linux,   cc: clang,  cxx: clang++ }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: Get latest CMake and Ninja
      if: runner.os == 'Windows'
      uses: lukka/get-cmake@latest

    - uses: actions/checkout@v4

    - name: Build & Test
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{ runner.workspace }}/build
        cc: ${{ matrix.platform.cc }}
        cxx: ${{ matrix.platform.cxx }}
        configure-options: --preset ${{ matrix.platform.preset }}
        run-test: true
        # USE_RELATIVE_PATHS is OFF, but let's install anyway
        install-build: true
        parallel: 3
